{"version":3,"sources":["useSwipe/handleTouch.ts","list/list.ts","list/shuffle.ts","storage.ts","state/duck.ts","state/redux.ts","state/selectors.ts","RecorderProvider.tsx","useRefSelector.ts","isTouchable.ts","useSwipe/state.ts","useSwipe/handleWheel.ts","useSwipe/useSwipe.ts","App/useRecord.ts","App/Word.tsx","App/Player.tsx","App/System.tsx","App/REC.tsx","App/Instructions.tsx","App/Score.tsx","App/Settings.tsx","App/App.tsx","App/useBrowserOverrides.ts","Loader.tsx","index.tsx"],"names":["lastX","lastY","list","_toConsumableArray","Set","concat","shuffle","array","pick","temp","sequence","last","length","Math","floor","random","KEYS","getList","key","stored","localStorage","getItem","JSON","parse","_unused","initialState","isRecording","audioSource","duration","subject","remaining","passed","failed","status","changeSubject","state","_createSlice","createSlice","name","reducers","start","stop","_ref","payload","pass","word","shift","push","fail","save","_ref2","doFailedList","doPassedList","doRemainingList","resetLists","changeStatus","_ref3","reducer","actions","store","configureStore","preloadedState","_getLists","_objectSpread","preloadState","useAppDispatch","useDispatch","selectSubject","selectRemainingList","selectPassedList","selectFailedList","_ref4","selectWord","selectAudioSource","_ref5","selectIsRecording","_ref6","selectDuration","_ref7","selectStatus","_ref8","selectIsReady","_ref9","RecorderContext","createContext","RecorderProvider","children","recorder","dispatch","ellapsed","useRef","effects","performance","now","current","controller","action","pausedState","inactiveState","useEffect","ondataavailable","data","URL","createObjectURL","Blob","type","context","_jsx","Provider","value","useRefSelector","selector","ref","undefined","useSelector","isTouchable","window","navigator","maxTouchPoints","subscribers","subscribe","callback","found","indexOf","splice","unsubscribe","withoutSubscribers","method","notifySubscribers","direction","forEach","subscriber","lastDelta","lastIncreasing","throttledHandleWheel","throttle","increasing","deltaY","deltaX","absX","abs","absY","delta","leading","averageX","averageY","events","ended","pressed","updateAverage","x","y","newX","newY","handleTouchStart","event","_event$changedTouches","changedTouches","screenX","screenY","setTimeout","handleTouchMove","_event$changedTouches2","handleTouchEnd","_event$changedTouches3","useSwipe","handler","document","addEventListener","removeEventListener","useRecord","_useRecorder","useContext","canRecord","handleTouch","useCallback","handleKeyDown","preventDefault","handleKeyUp","Container","styled","div","display","justifyContent","alignItems","height","marginBottom","AnimatedText","animated","span","backgroundClip","WebkitTextStroke","WebkitTextFillColor","backgroundImage","backgroundSize","toStyle","backgroundPosition","arguments","toFixed","Word","percent","_useSpring","useSpring","_useSpring2","_slicedToArray","style","api","Number","isFinite","fontSize","Player","forwardRef","_","_useState","useState","_useState2","setPercent","inaccurateDuration","handleTimeUpdate","audio","isRef","readyState","currentTime","accurateDuration","handleEnded","_jsxs","_Fragment","autoPlay","src","onTimeUpdate","onEnded","CompletionListener","System","setItem","stringify","setLists","position","top","right","Icon","SiAudiomack","width","REC","reset","cancel","loop","from","config","transform","to","range","output","color","Ul","ul","listStyleType","Li","li","Centered","verticalAlign","AnimatedInstruction","props","_objectWithoutProperties","_excluded","Instruction","normal","Children","count","toArray","elements","map","child","index","Subject","fontWeight","Divider","marginTop","BigDivider","getDisableProps","condition","HowToRecord","MdTouchApp","MdSpaceBar","Playing","audioRef","hasAudio","paused","play","handleSwipe","hasAudioProps","MdCheck","MdClose","GiSoundWaves","Beat","CgCrown","backgroundColor","borderRadius","MdUpdate","Settings","canDoFailed","canDoPassed","hasRemaining","canRestart","GiHamburger","MdList","Instructions","element","sharedStyle","Left","Right","margin","Score","passedList","failedList","underline","textDecoration","failedUnderlined","passedUnderlined","left","Hamburger","Close","getDisplay","flipped","show","previousStatus","opacity","mass","tension","friction","IconButton","onClick","o","flexDirection","App","body","overscrollBehavior","overflow","webkitUserSelect","createRef","ErrorMessage","Emoji","role","MediaLoader","setRecorder","_useState3","_useState4","setStatus","mediaDevices","getUserMedia","then","stream","MediaRecorder","catch","error","console","Loader","rootElement","getElementById","render"],"mappings":"8GASIA,EACAC,E,sCCqdSC,EAAIC,YAAO,IAAIC,IAAI,GAADC,OA/dlB,CAEX,MACA,MACA,OACA,QACA,OACA,MACA,OACA,SACA,OACA,OACA,OACA,MACA,OACA,MACA,MACA,OACA,OACA,MACA,MACA,OACA,QACA,OACA,QACA,OAEA,UACA,YACA,SACA,UACA,SACA,SACA,SACA,WACA,SACA,SACA,UACA,UACA,QACA,SACA,QACA,WACA,SACA,SACA,UACA,WACA,OACA,UACA,aACA,UACA,SAEA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,OAEA,QACA,OACA,MACA,OACA,KACA,OACA,OACA,OACA,QACA,OACA,QACA,SACA,UACA,UACA,OACA,OACA,MACA,OACA,OACA,MACA,OACA,SACA,OACA,SACA,UAEA,SACA,UACA,SACA,QACA,QACA,iBACA,UACA,SACA,QACA,QACA,QACA,SACA,QACA,SACA,YACA,UACA,SACA,UACA,WACA,OACA,UACA,YACA,SACA,SACA,QAEA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MAEA,QACA,OACA,QACA,MACA,UACA,MACA,OACA,QACA,SACA,OACA,OACA,QACA,MACA,OACA,QACA,SACA,OACA,OACA,OACA,QACA,MACA,QACA,MACA,SACA,OAEA,SACA,SACA,SACA,UACA,SACA,WACA,SACA,QACA,SACA,QACA,SACA,SACA,OACA,SACA,SACA,YACA,UACA,SACA,WACA,QAEA,MACA,OACA,MACA,QACA,OACA,MACA,OACA,QACA,MACA,YACA,MACA,OACA,MACA,OACA,OACA,MACA,MACA,QACA,MACA,OACA,OACA,MACA,MACA,MACA,QAEA,MACA,OACA,MACA,OACA,KACA,OACA,OACA,MACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,UACA,SACA,SACA,OACA,MACA,OACA,OACA,OACA,OAEA,WACA,SACA,QACA,UACA,UACA,OACA,SACA,QACA,UACA,OACA,eACA,WACA,SACA,WACA,YACA,WACA,SACA,OACA,QACA,SACA,UACA,SACA,SACA,SACA,WAEA,OACA,OACA,MACA,MACA,OACA,MACA,MACA,QACA,MACA,MACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,MACA,OACA,OACA,MACA,OACA,MACA,SACA,QAGQ,CACR,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,MACA,QACA,QACA,QACA,QACA,MACA,QACA,MACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,OACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,SACA,OACA,QACA,MACA,MACA,OACA,OACA,UACA,OACA,OACA,QACA,SACA,QACA,OACA,OACA,SACA,SACA,OACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,QACA,QACA,OACA,QACA,SACA,SACA,OACA,QACA,SACA,QACA,QACA,QACA,UACA,UACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,OACA,OACA,OACA,UACA,SACA,UACA,QACA,QACA,UACA,UACA,SACA,WACA,QACA,OACA,QACA,SACA,OACA,QACA,QACA,QACA,MACA,QACA,SACA,UACA,QACA,QACA,OACA,QACA,QACA,QACA,UACA,MACA,QACA,QACA,UACA,SACA,QACA,QACA,UACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,UACA,UACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,UACA,QACA,OACA,OACA,QACA,cC5dWC,EAAU,SAAIC,GAOzB,IANA,IAGEC,EACAC,EAJIC,EAAQP,YAAOI,GAEjBI,EAAOD,EAASE,OAIbD,GAGLF,EAAOC,EAFPF,EAAOK,KAAKC,MAAMD,KAAKE,SAAWJ,MAGlCD,EAASF,GAAQE,EAASC,GAC1BD,EAASC,GAAQF,EAGnB,OAAOC,CACT,ECdMM,EACO,YADPA,EAEI,SAFJA,EAGI,SAiBJC,EAAU,SAACC,GACf,IAAMC,EAASC,aAAaC,QAAQH,GAEpC,GAAIC,EACF,IACE,OAAOG,KAAKC,MAAMJ,EACpB,CAAE,MAAAK,GAAO,CAIb,EC1BaC,EAAsB,CACjCC,aAAa,EACbC,YAAa,GACbC,SAAU,EACVC,QAAS,YACTC,UAAW,GACXC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,SAGJC,EAAgB,SAACL,GACrB,OAAO,SAACM,GACNA,EAAMN,QAAUA,EAChBM,EAAMN,GAAWvB,EAAQ6B,EAAMN,IAC/BM,EAAMF,OAAS,QACfE,EAAMR,YAAc,EACtB,CACF,EAEOS,EAA2BC,YAAY,CAC5CC,KAAM,SACNb,eACAc,SAAU,CACRC,MAAO,SAACL,GACNA,EAAMT,aAAc,EACpBS,EAAMR,YAAc,GACpBQ,EAAMP,SAAW,CACnB,EACAa,KAAM,SAACN,EAAKO,GAAkD,IAAtCd,EAAQc,EAAjBC,QACbR,EAAMT,aAAc,EACpBS,EAAMP,SAAWA,CACnB,EACAgB,KAAM,SAACT,GACLA,EAAMR,YAAc,GAEpB,IAAMkB,EAAOV,EAAMA,EAAMN,SAASiB,QAE9BD,GACFV,EAAMJ,OAAOgB,KAAKF,EAEtB,EACAG,KAAM,SAACb,GACLA,EAAMR,YAAc,GAEpB,IAAMkB,EAAOV,EAAMA,EAAMN,SAASiB,QAE9BD,GACFV,EAAMH,OAAOe,KAAKF,EAEtB,EACAI,KAAM,SAACd,EAAKe,GAAqD,IAAzCvB,EAAWuB,EAApBP,QACbR,EAAMR,YAAcA,CACtB,EACAwB,aAAcjB,EAAc,UAC5BkB,aAAclB,EAAc,UAC5BmB,gBAAiBnB,EAAc,aAC/BoB,WAAY,SAACnB,GACXA,EAAMN,QAAU,YAChBM,EAAML,UAAYxB,EAAQJ,GAC1BiC,EAAMJ,OAAS,GACfI,EAAMH,OAAS,GACfG,EAAMF,OAAS,QACfE,EAAMR,YAAc,EACtB,EACA4B,aAAc,SAACpB,EAAKqB,GAAiD,IAA9Cb,EAAOa,EAAPb,QACrBR,EAAMF,OAASU,CACjB,KA/CUc,EAAOrB,EAAPqB,QAASC,EAAOtB,EAAPsB,QCFVC,EAAQC,YAAe,CAClCH,UACAI,eAjBmB,WACnB,IAAAC,EFyBO,CACLhC,UAAWb,EAAQD,GACnBe,OAAQd,EAAQD,GAChBgB,OAAQf,EAAQD,IE5BXc,EAASgC,EAAThC,UAAWC,EAAM+B,EAAN/B,OAAQC,EAAM8B,EAAN9B,OAE1B,OAAIF,GAAaC,GAAUC,EACzB+B,wBAAA,GACKtC,GAAY,IACfK,UAAWA,EAAYxB,EAAQwB,GAAaL,EAAaK,UACzDC,OAAQA,EAASzB,EAAQyB,GAAUN,EAAaM,OAChDC,OAAQA,EAAS1B,EAAQ0B,GAAUP,EAAaO,SAGlD+B,wBAAA,GAAWtC,GAAY,IAAEK,UAAWxB,EAAQJ,IAEhD,CAIkB8D,KAKLC,EAAiB,WAAH,OAASC,aAA2B,EC5BlDC,EAAgB,SAAHzB,GAAY,OAAAA,EAAPb,OAA4B,EAC9CuC,EAAsB,SAAHlB,GAAc,OAAAA,EAATpB,SAAgC,EACxDuC,EAAmB,SAAHb,GAAW,OAAAA,EAANzB,MAA0B,EAC/CuC,EAAmB,SAAHC,GAAW,OAAAA,EAANvC,MAA0B,EAE/CwC,EAAa,SAACrC,GAAY,OAAKA,EAAMA,EAAMN,SAAS,EAAG,EACvD4C,EAAoB,SAAHC,GAAgB,OAAAA,EAAX/C,WAAoC,EAC1DgD,EAAoB,SAAHC,GAAgB,OAAAA,EAAXlD,WAAoC,EAC1DmD,EAAiB,SAAHC,GAAa,OAAAA,EAARlD,QAA8B,EAEjDmD,EAAe,SAAHC,GAAW,OAAAA,EAAN/C,MAA0B,EAC3CgD,EAAgB,SAAHC,GAAW,MAAwB,UAAxBA,EAANjD,MAAsC,E,oCCH/DkD,EAAkBC,wBAAoB,CAAC,GAQhCC,EAAkD,SAAH3C,GAGrD,IAFL4C,EAAQ5C,EAAR4C,SACAC,EAAQ7C,EAAR6C,SAEMC,EAAWvB,IACXwB,EAAWC,iBAAO,GAElBC,EACE,WACmB,aAAnBJ,EAASpD,QACXoD,EAAS9C,OACT+C,EAAS9B,EAAQjB,MAAMmD,YAAYC,MAAQJ,EAASK,SAAW,MAEnE,EANIH,EAOG,WACkB,cAAnBJ,EAASpD,QACXoD,EAAS/C,QACTiD,EAASK,QAAUF,YAAYC,MAC/BL,EAAS9B,EAAQlB,SAErB,EA4BIuD,EAAa,SAACC,GAClB,OAAQT,EAASpD,OACf,IAAK,YAEH,YA3BG,SA0BY6D,GAzBfL,KA4BF,IAAK,SAEH,YAzBc,SAACK,GAEZ,SADCA,GAEJL,GAGN,CAkBMM,CAAYD,GAId,QAEE,YAtBgB,SAACA,GAEd,UADCA,GAEJL,GAGN,CAeMO,CAAcF,GAIpB,EAUAG,qBAAU,WACRZ,EAASa,gBAAkB,SAAAlD,GAAa,IAAXmD,EAAInD,EAAJmD,KACrB1E,EAAc2E,IAAIC,gBACtB,IAAIC,KAAK,CAACH,GAAO,CAACI,KAvFR,gBA0FZjB,EAAS9B,EAAQT,KAAKtB,GACxB,CACF,GAAG,CAAC4D,EAAUC,IAEd,IAAMkB,EAAU,CACdlE,MAnBY,WACZuD,EAAW,QACb,EAkBEtD,KAhBW,WACXsD,EAAW,OACb,GAiBA,OACEY,cAACxB,EAAgByB,SAAQ,CAACC,MAAOH,EAAQpB,SACtCA,GAGP,EC3GawB,EAAiB,SAAmBC,GAC/C,IAAMC,EAAMtB,sBAAUuB,GAMtB,OAJAC,aAAY,SAAC/E,GACX6E,EAAIlB,QAAUiB,EAAS5E,EACzB,IAEO6E,CACT,ECbaG,EAAc,iBAAkBC,QAAUC,UAAUC,eCM3DC,EAA0B,GAUnBC,EAAY,SAACC,GAGxB,OAFAF,EAAYxE,KAAK0E,GAEV,kBAXkB,SAACA,GAC1B,IAAMC,EAAQH,EAAYI,QAAQF,GAClCF,EAAYK,OAAOF,EAAO,EAC5B,CAQeG,CAAYJ,EAAU,CACrC,EAEaK,EAAqB,SAACC,GAC5BR,EAAY3G,QACfmH,GAEJ,EAEaC,EAAoB,SAACC,GAChCV,EAAYW,SAAQ,SAACC,GAAU,OAAKA,EAAWrC,QAAQmC,EAAU,GACnE,E,QC1BIG,EAAY,EACZC,GAAiB,EAkCRC,EAAuBC,oBA/BT,SAAH7F,GAAsC,IAMxD8F,EANuBC,EAAM/F,EAAN+F,OAAQC,EAAMhG,EAANgG,OAC7BC,EAAO9H,KAAK+H,IAAIF,GAChBG,EAAOhI,KAAK+H,IAAIH,GAEhBK,EAAQH,GAAQE,EAAOF,EAAOE,EAGpC,GAAIT,EAAYU,EACdN,GAAa,MACR,MAAIJ,EAAYU,GAGrB,OAFAN,GAAa,CAGf,EAGuB,IAAnBH,IAA2C,IAAfG,GAQ9BR,EANIW,GAAQE,EACEH,GAAU,EAAI,OAAS,QAEvBD,GAAU,EAAI,KAAO,QAMrCJ,EAAiBG,EACjBJ,EAAYU,CACd,GAE0D,IAAK,CAACC,SAAS,IXlCrEC,EAAW,EACXC,EAAW,EAKXC,EAAS,EAETC,GAAQ,EACRC,IAAU,EAERC,GAAgB,SAACC,EAAWC,GAChC,IAAIC,EAAOxJ,EAAQsJ,EACfG,EAAOxJ,EAAQsJ,EAEdL,EAGiB,IAAXA,GACTF,EAAWQ,EACXP,EAAWQ,IAEXT,GAAYA,EAAWE,EAASM,IAASN,EAAS,GAClDD,GAAYA,EAAWC,EAASO,IAASP,EAAS,KAPlDF,EAAW,EACXC,EAAW,GASbjJ,EAAQsJ,EACRrJ,EAAQsJ,IACNL,CACJ,EAEaQ,GAAmB,SAACC,GAC/BT,EAAS,EACTC,GAAQ,EACRC,IAAU,EAEV,IAAAQ,EAA2BD,EAAME,eAAe,GAAzCC,EAAOF,EAAPE,QAASC,EAAOH,EAAPG,QAChBV,GAAcS,EAASC,GAEvBC,YAAW,WACT,IAAIb,EAAJ,CAIA,IAAMT,EAAS7H,KAAK+H,IAAII,GAClBP,EAAS5H,KAAK+H,IAAIK,IAEVR,GAAUC,EAASD,EAASC,GAlDzB,IAqDfV,EAAkB,WAClBmB,GAAQ,EACRC,IAAU,EAVZ,CAYF,GAxDqB,IAyDvB,EAEaa,GAAkB,SAACN,GAC9B,IAAKR,EAAO,CACV,IAAAe,EAA2BP,EAAME,eAAe,GAAzCC,EAAOI,EAAPJ,QAASC,EAAOG,EAAPH,QAChBV,GAAcS,EAASC,EACzB,CACF,EAEaI,GAAiB,SAACR,GAC7B,IAAKR,EAAO,CACV,IAAAiB,EAA2BT,EAAME,eAAe,GAAzCC,EAAOM,EAAPN,QAASC,EAAOK,EAAPL,QAChBV,GAAcS,EAASC,GAEvB,IAAMrB,EAAS7H,KAAK+H,IAAII,GAClBP,EAAS5H,KAAK+H,IAAIK,GAGxB,IAFcR,GAAUC,EAASD,EAASC,IA1EzB,EAoFfV,EANIS,GAAUC,EACAO,EAAW,EAAI,KAAO,OAEtBD,EAAW,EAAI,OAAS,QAK1C,CAEII,IACFpB,EAAkB,YAGpBmB,GAAQ,CACV,EYtFakB,GAAW,SAACC,GACvB,IAAM7C,EAAW/B,iBAAO4E,GAExBnE,qBAAU,WACRsB,EAAS3B,QAAUwE,CACrB,GAAG,CAACA,IAEJnE,qBAAU,WACR2B,GAAmB,WACjByC,SAASC,iBAAiB,QAASlC,GAE/BnB,IACFoD,SAASC,iBAAiB,aAAcd,IACxCa,SAASC,iBAAiB,YAAaP,IACvCM,SAASC,iBAAiB,WAAYL,IAE1C,IAEA,IAAMtC,EAAcL,EAAUC,GAE9B,OAAO,WACLI,IAEAC,GAAmB,WACjByC,SAASE,oBAAoB,QAASnC,GAElCnB,IACFoD,SAASE,oBAAoB,aAAcf,IAC3Ca,SAASE,oBAAoB,YAAaR,IAC1CM,SAASE,oBAAoB,WAAYN,IAE7C,GACF,CACF,GAAG,GACL,ECrCaO,GAAY,WACvB,IAAAC,ENMOC,qBAAWzF,GMNX3C,EAAKmI,EAALnI,MAAOC,EAAIkI,EAAJlI,KACRoI,EAAY/D,EAAe7B,GAE3B6F,EAAcC,uBAClB,SAAC/E,GACC,GAAI6E,EAAU/E,QACZ,OAAQE,GACN,IAAK,UAEH,YADAxD,IAGF,IAAK,WAEH,YADAC,IAKR,GACA,CAACoI,EAAWrI,EAAOC,IAGrB4H,GAASS,GAET3E,qBAAU,WACR,IAAM6E,EAAgB,SAACrB,GACjBkB,EAAU/E,SAAyB,MAAd6D,EAAMzI,MAC7ByI,EAAMsB,iBACNzI,IAEJ,EAEM0I,EAAc,SAACvB,GACfkB,EAAU/E,SAAyB,MAAd6D,EAAMzI,MAC7ByI,EAAMsB,iBACNxI,IAEJ,EAKA,OAHA8H,SAASC,iBAAiB,UAAWQ,GACrCT,SAASC,iBAAiB,QAASU,GAE5B,WACLX,SAASE,oBAAoB,UAAWO,GACxCT,SAASE,oBAAoB,QAASS,EACxC,CACF,GAAG,CAACL,EAAWrI,EAAOC,GACxB,E,SC3CM0I,GAAYC,IAAOC,IAAI,CAC3BC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WACZC,OAAO,QACPC,aAAa,QAGTC,GAAeP,YAAOQ,YAASC,KAAhBT,CAAsB,CACzCU,eAAgB,OAChBC,iBAAkB,YAClBC,oBAAqB,cAGrBC,gBAAgB,kDAMhBC,eAAgB,SAGZC,GAAU,WAGd,MAAO,CACLC,oBAHgB,KADYC,UAAAzL,OAAA,QAAAqG,IAAAoF,UAAA,GAAAA,UAAA,GAAG,MACAC,QAAQ,GAAK,IAKhD,EAEaC,GAAO,SAAH7J,GAA0B,IAArB8J,EAAO9J,EAAP8J,QACd3J,EAAOqE,YAAY1C,GAEzBiI,EAAqBC,sBAAU,kBAAMP,IAAS,IAACQ,EAAAC,YAAAH,EAAA,GAAxCI,EAAKF,EAAA,GAAEG,EAAGH,EAAA,GAEbI,OAAOC,SAASR,GAClBM,EAAItK,MAAM2J,GAAQK,IAElBM,EAAItK,MAAM2J,MAIZ,IAAMc,EAAWpK,EAAKjC,OAAS,EAAC,YAEhC,OACE+F,cAACwE,GAAS,CAAA7F,SACRqB,cAACgF,GAAY,CAACkB,MAAK9I,wBAAA,GAAM8I,GAAK,IAAEI,aAAU3H,SAAEzC,KAGlD,ECjDaqK,GAASC,sBAA6B,SAACC,EAAGpG,GACrD,IAAMrF,EAAcuF,YAAYzC,GAEhC4I,EAA8BC,mBAAS,KAAIC,EAAAX,YAAAS,EAAA,GAApCb,EAAOe,EAAA,GAAEC,EAAUD,EAAA,GAEpBE,EAAqB3G,EAAejC,GAEpC6I,EAAmB3C,uBAAY,WACnC,IAAM4C,EAZI,SAAC3G,GACb,QAASA,EAAIlB,OACf,CAUkB8H,CAAM5G,IAAQA,EAAIlB,QAIhC,GAAI6H,EACF,GAAyB,IAArBA,EAAME,WAAkB,CAC1B,IAAOC,EAA2CH,EAA3CG,YAAuBC,EAAoBJ,EAA9B/L,SAEdA,EAAWmL,OAAOC,SAASe,GAC7BA,EACAN,EAAmB3H,QAIvB0H,EAFoBM,EAAclM,EAAY,IAGhD,MACE4L,EAAW,IAGjB,GAAG,CAACxG,EAAKyG,IAGHO,EAAcjD,uBAAY,WAC9ByC,EAAW,IACb,GAAG,IASH,OACES,eAAAC,WAAA,CAAA5I,SAAA,CACEqB,cAAA,SACEK,IAAKA,EACLmH,UAAQ,EACRC,IAAKzM,EACL0M,aAAcX,EACdY,QAASN,IAEXrH,cAAC4F,GAAI,CAACC,QAASA,MAGrB,ICnDM+B,GAAqB,WACzB,IAAM/I,EAAWvB,IAQjB,OANkBiD,aAAY,SAAC/E,GAAY,OAAMqC,EAAWrC,EAAM,KAGhEqD,EAAS9B,EAAQH,aAAa,cAGzBoD,cAAAuH,WAAA,GACT,EAGaM,GAAS,WACpB,IAAM1M,EAAYoF,YAAY9C,GACxBrC,EAASmF,YAAY7C,GACrBrC,EAASkF,YAAY5C,GAU3B,OARA6B,qBAAU,YbxBY,SAAHzD,GAAqD,IAAhDZ,EAASY,EAATZ,UAAWC,EAAMW,EAANX,OAAQC,EAAMU,EAANV,OACvCF,GACFV,aAAaqN,QAAQzN,EAAgBM,KAAKoN,UAAU5M,IAGlDC,GACFX,aAAaqN,QAAQzN,EAAaM,KAAKoN,UAAU3M,IAG/CC,GACFZ,aAAaqN,QAAQzN,EAAaM,KAAKoN,UAAU1M,GAErD,CaaI2M,CAAS,CACP7M,YACAC,SACAC,UAEJ,GAAG,CAACF,EAAWC,EAAQC,IAGrB2E,cAAAuH,WAAA,CAAA5I,SACEqB,cAAC4H,GAAkB,KAGzB,E,SCtCMpD,GAAYC,IAAOC,IAAI,CAC3BuD,SAAU,WACVC,IAAK,MACLC,MAAO,SAGHC,GAAO3D,YAAO4D,KAAP5D,CAAoB,CAC/BK,OAAQ,MACRwD,MAAO,SAGIC,GAAM,WACjB,IAAMxN,EAAcwF,YAAYvC,GAEzB2E,EAAKoD,qBAAU,CACpByC,MAAOzN,EACP0N,QAAS1N,EACT2N,MAAM,EACNC,KAAM,CAAChG,EAAG,GACVA,EAAG5H,EAAc,EAAI,EACrB6N,OAAQ,CAAC3N,SAAU,OANd0H,EASP,OACE3C,cAACwE,GAAS,CAAA7F,SACRqB,cAACiF,YAASP,IAAG,CACXwB,MAAO,CACL2C,UAAWlG,EACRmG,GAAG,CACFC,MAAO,CAAC,EAAG,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAC/CC,OAAQ,CAAC,EAAG,IAAM,GAAK,IAAK,GAAK,IAAK,KAAM,KAE7CF,IAAG,SAACnG,GAAC,eAAAjJ,OAAciJ,EAAC,SACvBhE,SAEFqB,cAACoI,GAAI,CAAClC,MAAO,CAAC+C,MAAOlO,EAAc,YAAc,gBAIzD,E,2CCVMmO,GAAKzE,IAAO0E,GAAG,CACnBC,cAAe,SAGXC,GAAK5E,YAAOQ,YAASqE,GAAhB7E,CAAoB,CAAC,GAE1B8E,GAAW9E,IAAOS,KAAK,CAC3BsE,cAAe,WAGXC,GAAkD,SAAH1N,GAG9C,IAFL4C,EAAQ5C,EAAR4C,SACG+K,EAAKC,YAAA5N,EAAA6N,IAEF1D,EAAQH,qBAAU2D,EAAMxD,OAE9B,OAAOlG,cAACqJ,GAAE,CAACnD,MAAOA,EAAMvH,SAAEA,GAC5B,EAEMkL,GAA2C,SAAHtN,GAA2B,IAAtBoC,EAAQpC,EAARoC,SAAUuH,EAAK3J,EAAL2J,MAErD4D,EACyB,IAA7BC,WAASC,MAAMrL,GACVoL,WAASE,QAAQtL,GAAU,GAAoB+K,MAAM/K,SACtDA,EAEAuL,EAAWH,WAASI,IAAIL,GAAQ,SAACM,EAAOC,GAC5C,OAAc,IAAVA,EACKrK,cAACuJ,GAAQ,CAAA5K,SAAEyL,IAEXpK,cAAAuH,WAAA,CAAA5I,SAAGyL,GAEd,IAEA,OAAIlE,EACKlG,cAACyJ,GAAmB,CAACvD,MAAOA,EAAMvH,SAAEuL,IAEpClK,cAACqJ,GAAE,CAAA1K,SAAEuL,GAEhB,EAEMI,GAAU7F,IAAOS,KAAK,CAC1BqF,WAAY,SAGRC,GAAU/F,IAAOC,IAAI,CACzB+F,UAAW,QAGPC,GAAajG,IAAOC,IAAI,CAC5B+F,UAAW,QAGPE,GAAkB,SAACC,GACvB,OAAKA,EAQI,CACL1E,MAAO,CACL+C,MAAO,UATJ,CACL/C,MAAO,CACL+C,MAAM,WAER,eAAe,EASrB,EAGM4B,GACArK,EACK,SAAA3D,GAAsC,IAApC9B,EAAW8B,EAAX9B,YACP,OACEiF,cAAC6J,GAAW,CAAAlL,SACT5D,EACCuM,eAAAC,WAAA,CAAA5I,SAAA,CACEqB,cAAC8K,KAAU,IAAG,qBAGhBxD,eAAAC,WAAA,CAAA5I,SAAA,CACEqB,cAAC8K,KAAU,IAAG,IAAC9K,cAACsK,GAAO,CAAA3L,SAAC,eAAoB,iBAKtD,EAEO,SAAAf,GAAsC,IAApC7C,EAAW6C,EAAX7C,YACP,OACEiF,cAAC6J,GAAW,CAAAlL,SACT5D,EACCuM,eAAAC,WAAA,CAAA5I,SAAA,CACEqB,cAAC+K,KAAU,IAAG,cAAW/K,cAACsK,GAAO,CAAA3L,SAAC,UAAe,cAGnD2I,eAAAC,WAAA,CAAA5I,SAAA,CACEqB,cAAC+K,KAAU,IAAG,SAAM/K,cAACsK,GAAO,CAAA3L,SAAC,UAAe,iBAKtD,EAIEqM,GAAU,SAAHjN,GAA2B,IAAtBkN,EAAQlN,EAARkN,SACVC,IAAa3K,YAAYzC,GACzB/C,EAAcwF,YAAYvC,GAE1Ba,EAAWvB,IAuCjBoG,IANuB,SAACrE,GAClB6L,GAhCc,SAAC5J,GACnB,OAAQA,GACN,IAAK,KACH,IAAM0F,EAAQiE,EAAS9L,QAevB,YAbI6H,IACEA,EAAMmE,OACRnE,EAAMoE,OAONpE,EAAMG,YAAc,IAM1B,IAAK,OAEH,YADAtI,EAAS9B,EAAQV,QAGnB,IAAK,QACHwC,EAAS9B,EAAQd,QAIvB,CAIIoP,CAAYhM,EAEhB,IAIA,IAAMiM,EAAgBX,GAAgBO,GAEtC,OACE5D,eAAAC,WAAA,CAAA5I,SAAA,CACEqB,cAAC6K,GAAW,CAAC9P,YAAaA,IAC1BiF,cAACwK,GAAO,IACRlD,eAACuC,GAAWzM,wBAAA,GAAKkO,GAAa,IAAA3M,SAAA,CAC5BqB,cAACuL,KAAO,IAAG,IAACvL,cAACsK,GAAO,CAAA3L,SAAC,gBAAqB,eAE5C2I,eAACuC,GAAWzM,wBAAA,GAAKkO,GAAa,IAAA3M,SAAA,CAC5BqB,cAACwL,KAAO,IAAG,IAACxL,cAACsK,GAAO,CAAA3L,SAAC,eAAoB,eAE3CqB,cAACwK,GAAO,IACRlD,eAACuC,GAAWzM,wBAAA,GAAKkO,GAAa,IAAA3M,SAAA,CAC5BqB,cAACyL,KAAY,IAAG,IAACzL,cAACsK,GAAO,CAAA3L,SAAC,aAAkB,6BAIpD,EAEM+M,GAAO,WACX,IAAMtQ,EAASmF,YAAY7C,GAAkBzD,OACvCoB,EAASkF,YAAY5C,GAAkB1D,OAEvC4E,EAAWvB,IA0BjB,OAHAoG,IArBoB,SAACpC,GACnB,OAAQA,GACN,IAAK,OAIH,YAHIjG,GACFwD,EAAS9B,EAAQP,iBAIrB,IAAK,QAIH,YAHIpB,GACFyD,EAAS9B,EAAQN,iBAIrB,IAAK,KAEH,YADAoC,EAAS9B,EAAQJ,cAIvB,IAME2K,eAAAC,WAAA,CAAA5I,SAAA,CACE2I,eAACuC,GAAW,CAAAlL,SAAA,CACVqB,cAAC2L,KAAO,CAACzF,MAAO,CAAC0F,gBAAiB,SAAUC,aAAc,SAAW,IACrE7L,cAACsK,GAAO,CAAA3L,SAAC,iBAEXqB,cAAC0K,GAAU,IACXpD,eAACuC,GAAWzM,wBAAA,GAAKuN,GAAgBtP,IAAO,IAAAsD,SAAA,CACtCqB,cAACwL,KAAO,IAAG,IAACxL,cAACsK,GAAO,CAAA3L,SAAC,eAAoB,aAAWtD,EAAO,oBAE7D2E,cAACwK,GAAO,IACRlD,eAACuC,GAAW,CAAAlL,SAAA,CACVqB,cAAC8L,KAAQ,IAAG,IAAC9L,cAACsK,GAAO,CAAA3L,SAAC,aAAkB,iBAE1CqB,cAACwK,GAAO,IACRlD,eAACuC,GAAWzM,wBAAA,GAAKuN,GAAgBvP,IAAO,IAAAuD,SAAA,CACtCqB,cAACuL,KAAO,IAAG,IAACvL,cAACsK,GAAO,CAAA3L,SAAC,gBAAqB,aAAWvD,EAAO,sBAKpE,EAEM2Q,GAAW,WACf,IAAM3Q,EAASmF,YAAY7C,GAAkBzD,OACvCoB,EAASkF,YAAY5C,GAAkB1D,OACvCkB,EAAYoF,YAAY9C,GAAqBxD,OAC7CiB,EAAUqF,YAAY/C,GAEtBqB,EAAWvB,IAEX0O,EAAc3Q,GAAsB,WAAZH,EACxB+Q,EAAc7Q,GAAsB,WAAZF,EAExBgR,EAAe/Q,GAAyB,cAAZD,EAC5BiR,KAAgB/Q,IAAUC,GAiChC,OAFAqI,IA7BoB,SAACpC,GACnB,OAAQA,GACN,IAAK,OAIH,YAHI0K,GACFnN,EAAS9B,EAAQP,iBAIrB,IAAK,QAIH,YAHIyP,GACFpN,EAAS9B,EAAQN,iBAIrB,IAAK,KAIH,YAHI0P,GACFtN,EAAS9B,EAAQJ,eAIrB,IAAK,OAIH,YAHIuP,GACFrN,EAAS9B,EAAQL,oBAKzB,IAKE4K,eAAAC,WAAA,CAAA5I,SAAA,CACE2I,eAACuC,GAAW,CAAAlL,SAAA,CACVqB,cAACoM,KAAW,CAAClG,MAAO,CAAC+C,MAAO,UAAW4C,aAAc,SAAW,IAChE7L,cAACsK,GAAO,CAAA3L,SAAC,gBAEXqB,cAAC0K,GAAU,IACXpD,eAACuC,GAAWzM,wBAAA,GAAKuN,GAAgBqB,IAAY,IAAArN,SAAA,CAC3CqB,cAACwL,KAAO,IAAG,IAACxL,cAACsK,GAAO,CAAA3L,SAAC,eAAoB,aAAWtD,EAAO,oBAE7D2E,cAACwK,GAAO,IACRlD,eAACuC,GAAWzM,wBAAA,GAAKuN,GAAgBwB,IAAW,IAAAxN,SAAA,CAC1CqB,cAAC8L,KAAQ,IAAG,IAAC9L,cAACsK,GAAO,CAAA3L,SAAC,aAAkB,kBAE1CqB,cAACwK,GAAO,IACRlD,eAACuC,GAAWzM,wBAAA,GAAKuN,GAAgBsB,IAAY,IAAAtN,SAAA,CAC3CqB,cAACuL,KAAO,IAAG,IAACvL,cAACsK,GAAO,CAAA3L,SAAC,gBAAqB,aAAWvD,EAAO,oBAG9D4E,cAACwK,GAAO,IACRlD,eAACuC,GAAWzM,wBAAA,GAAKuN,GAAgBuB,IAAa,IAAAvN,SAAA,CAC5CqB,cAACqM,KAAM,IAAG,IAACrM,cAACsK,GAAO,CAAA3L,SAAC,eAAoB,2BAAyB,IAChExD,EAAU,eAInB,EAIamR,GAAe,SAAC5C,GAC3B,IAEI6C,EACJ,OAHehM,YAAYnC,IAIzB,IAAK,QACHmO,EAAUvM,cAACgL,GAAO5N,YAAA,GAAKsM,IACvB,MACF,IAAK,YACH6C,EAAUvM,cAAC0L,GAAI,IACf,MACF,IAAK,WACHa,EAAUvM,cAAC+L,GAAQ,IAIvB,OAAO/L,cAACkJ,GAAE,CAAC,aAAW,eAAcvK,SAAE4N,GACxC,EC7VM/H,GAAYC,IAAOC,IAAI,CAC3BC,QAAS,OACTC,eAAgB,WAGZ4H,GAAyB,CAC7B7H,QAAS,OACT4F,WAAY,OACZjC,MAAM,OAGFmE,GAAOhI,IAAOS,KAAKsH,GAAa,CACpC5H,eAAgB,WAChBqE,MAAO,QAGHyD,GAAQjI,IAAOS,KAAKsH,GAAa,CACrC7H,QAAS,OACTsE,MAAO,UAGHuB,GAAU/F,IAAOS,KAAK,CAC1ByH,OAAQ,QACRf,gBAAiB,OACjBtD,MAAO,QAGIsE,GAAQ,WACnB,IAAMC,EAAatM,YAAY7C,GACzBoP,EAAavM,YAAY5C,GAEzBzC,EAAUqF,YAAY/C,GACtBuP,EAAY,CAACC,eAAgB,aAC7BC,EAA+B,WAAZ/R,EAAuB6R,OAAYzM,EACtD4M,EAA+B,WAAZhS,EAAuB6R,OAAYzM,EAE5D,OACEgH,eAAC9C,GAAS,CAAA7F,SAAA,CACRqB,cAACyM,GAAI,CAAC,aAAW,aAAavG,MAAO+G,EAAiBtO,SACnDmO,EAAW7S,SAEd+F,cAACwK,GAAO,IACRxK,cAAC0M,GAAK,CAAC,aAAW,aAAaxG,MAAOgH,EAAiBvO,SACpDkO,EAAW5S,WAIpB,E,SCvCMuK,GAAYC,IAAOC,IAAI,CAC3BuD,SAAU,WACVC,IAAK,MACLiF,KAAM,QAGFC,GAAYnI,oBAASmH,MACrBiB,GAAQpI,oBAASuG,MAEjB8B,GAAa,SAACC,GAClB,OAAOA,EAAU,OAAS,aAC5B,EAEaxB,GAAW,WACtB,IAAMlN,EAAWvB,IACXhC,EAASiF,YAAYnC,GACrBoP,EAAkB,aAAXlS,EAEPmS,EAAiB1O,iBAAOzD,GAC9BkE,qBAAU,WACO,aAAXlE,IACFmS,EAAetO,QAAU7D,EAE7B,GAAG,CAACA,IAEJ,IAAAwK,EAAsCC,qBAAU,CAC9CpB,QAAS2I,GAAWE,GACpBE,QAASF,EAAO,EAAI,EACpB3E,UAAU,8BAADnP,OAAgC8T,EAAO,IAAM,EAAC,QACvD5E,OAAQ,CAAC+E,KAAM,EAAGC,QAAS,IAAKC,SAAU,MAJrChF,EAAS/C,EAAT+C,UAAWlE,EAAOmB,EAAPnB,QAAS+I,EAAO5H,EAAP4H,QAY3B,OACE1N,cAACwE,GAAS,CAAA7F,SACR2I,eAACwG,KAAU,CAACC,QAPD,WACblP,EAAS9B,EAAQH,aAAa4Q,EAAOC,EAAetO,QAAU,YAChE,EAKgCR,SAAA,CAC1BqB,cAACoN,GAAS,CACRlH,MAAO,CACLwH,UACA/I,UACAkE,eAGJ7I,cAACqN,GAAK,CACJnH,MAAO,CACLvB,QAASA,EAAQmE,IAAG,WAClB,OAAOwE,IAAYE,EACrB,IACAE,QAASA,EAAQ5E,IAAG,SAACkF,GAAS,OAAK,EAAIA,CAAC,IACxCnF,mBAMZ,EC1DMrE,GAAYC,IAAOC,IAAI,CAC3BC,QAAS,OACTsJ,cAAe,SACfhG,SAAU,aAGCiG,GAAM,WCdjB1O,qBAAU,WAERoE,SAASuK,KAAKjI,MAAMkI,mBAAqB,OACzCxK,SAASuK,KAAKjI,MAAMmI,SAAW,SAE3B7N,IACFoD,SAASuK,KAAKjI,MAAMoI,iBAAmB,OAE3C,GAAG,IDQHvK,KAGA,IAAMkH,EAAWsD,sBAEjB,OACEjH,eAAAC,WAAA,CAAA5I,SAAA,CACE2I,eAAC9C,GAAS,CAAA7F,SAAA,CACRqB,cAAC+L,GAAQ,IACT/L,cAACuI,GAAG,IACJvI,cAACuG,GAAM,CAAClG,IAAK4K,IACbjL,cAAC4M,GAAK,IACN5M,cAACsM,GAAY,CAACrB,SAAUA,OAE1BjL,cAAC6H,GAAM,MAGb,E,gBE9BMrD,GAAYC,IAAOC,IAAI,CAC3BiI,OAAO,SACPf,gBAAiB,QACjBtD,MAAM,QACNxD,OAAO,UAGH0J,GAAe/J,IAAOC,IAAI,CAC9BiI,OAAO,QAGH8B,GAAY,SAAH1S,GAAA,IAAK4C,EAAQ5C,EAAR4C,SAAa+K,EAAKC,YAAA5N,EAAA6N,IAAA,OACpC5J,cAAA,OAAA5C,wBAAA,GAAUsM,GAAK,IAAEgF,KAAK,MAAK/P,SACxBA,IACI,EAGHgQ,GAAc,WAClB,IAAM9P,EAAWvB,IAEjBoJ,EAAgCC,qBAAqCC,EAAAX,YAAAS,EAAA,GAA9D9H,EAAQgI,EAAA,GAAEgI,EAAWhI,EAAA,GAE5BiI,EAA4BlI,mBAE1B,WAAUmI,EAAA7I,YAAA4I,EAAA,GAFLvT,EAAMwT,EAAA,GAAEC,EAASD,EAAA,GAwBxB,OApBAtP,qBAAU,WACR,IACEkB,UAAUsO,aACPC,aAAa,CAACjI,OAAO,IACrBkI,MAAK,SAACC,GAEL,IAAMvQ,EAAW,IAAIwQ,cAAcD,GAEnCP,EAAYhQ,GACZmQ,EAAU,QACZ,IACCM,OAAM,SAACC,GACNC,QAAQD,MAAMA,GACdP,EAAU,WACZ,GACJ,CAAE,MAAAlU,GACAkU,EAAU,cACZ,CACF,GAAG,CAAClQ,IAEIvD,GACN,IAAK,UACH,OAAO0E,cAAAuH,WAAA,IACT,IAAK,QACH,OACEvH,cAACtB,EAAgB,CAACE,SAAUA,EAAUD,SACpCqB,cAACkO,GAAG,MAGV,IAAK,WACH,OACE5G,eAACkH,GAAY,CAAA7P,SAAA,CAAC,MACTqB,cAACyO,GAAK,CAAC,eAAa,EAAK9P,SAAC,iBAAU,8CAK7C,QACE,OACE2I,eAACkH,GAAY,CAAA7P,SAAA,CAEXqB,cAACyO,GAAK,CAAC,aAAW,SAAQ9P,SAAC,iBAAU,+DAK/C,EAEa6Q,GAAS,WACpB,OACExP,cAACwE,GAAS,CAAA7F,SACRqB,cAAC2O,GAAW,KAGlB,EClFMc,GAAc7L,SAAS8L,eAAe,QAE5CC,iBACE3P,cAACC,IAAQ,CAACjD,MAAOA,EAAM2B,SACrBqB,cAACwP,GAAM,MAETC,G","file":"static/js/main.5928aa4a.chunk.js","sourcesContent":["import {notifySubscribers} from './state';\nimport {SwipeDirection} from './types';\n\nconst SWIPE_CUTOFF = 5; // Change in coordinates\nconst PRESSED_CUTOFF = 200; // Delay to see whether long press\n\nlet averageX = 0;\nlet averageY = 0;\n\nlet lastX: number;\nlet lastY: number;\n\nlet events = 0;\n\nlet ended = true;\nlet pressed = false;\n\nconst updateAverage = (x: number, y: number) => {\n  let newX = lastX - x;\n  let newY = lastY - y;\n\n  if (!events) {\n    averageX = 0;\n    averageY = 0;\n  } else if (events === 1) {\n    averageX = newX;\n    averageY = newY;\n  } else {\n    averageX = (averageX * events + newX) / (events + 1);\n    averageY = (averageY * events + newY) / (events + 1);\n  }\n\n  lastX = x;\n  lastY = y;\n  ++events;\n};\n\nexport const handleTouchStart = (event: TouchEvent) => {\n  events = 0;\n  ended = false;\n  pressed = false;\n\n  const {screenX, screenY} = event.changedTouches[0];\n  updateAverage(screenX, screenY);\n\n  setTimeout(() => {\n    if (ended) {\n      return;\n    }\n\n    const deltaX = Math.abs(averageX);\n    const deltaY = Math.abs(averageY);\n\n    const delta = deltaY >= deltaX ? deltaY : deltaX;\n\n    if (delta < SWIPE_CUTOFF) {\n      notifySubscribers('pressed');\n      ended = true;\n      pressed = true;\n    }\n  }, PRESSED_CUTOFF);\n};\n\nexport const handleTouchMove = (event: TouchEvent) => {\n  if (!ended) {\n    const {screenX, screenY} = event.changedTouches[0];\n    updateAverage(screenX, screenY);\n  }\n};\n\nexport const handleTouchEnd = (event: TouchEvent) => {\n  if (!ended) {\n    const {screenX, screenY} = event.changedTouches[0];\n    updateAverage(screenX, screenY);\n\n    const deltaX = Math.abs(averageX);\n    const deltaY = Math.abs(averageY);\n    const delta = deltaY >= deltaX ? deltaY : deltaX;\n\n    if (delta >= SWIPE_CUTOFF) {\n      let direction: SwipeDirection;\n      if (deltaY >= deltaX) {\n        direction = averageY > 0 ? 'up' : 'down';\n      } else {\n        direction = averageX > 0 ? 'left' : 'right';\n      }\n\n      notifySubscribers(direction);\n    }\n  }\n\n  if (pressed) {\n    notifySubscribers('released');\n  }\n\n  ended = true;\n};\n","const kgtd = [\n  //Beginning\n  \"cat\",\n  \"key\",\n  \"comb\",\n  \"catch\",\n  \"coin\",\n  \"cub\",\n  \"cone\",\n  \"carrot\",\n  \"corn\",\n  \"cold\",\n  \"cool\",\n  \"cop\",\n  \"cake\",\n  \"car\",\n  \"kid\",\n  \"cave\",\n  \"coat\",\n  \"cow\",\n  \"cut\",\n  \"cart\",\n  \"candy\",\n  \"card\",\n  \"color\",\n  \"kite\",\n  //Middle\n  \"racquet\",\n  \"breakfast\",\n  \"baking\",\n  \"chicken\",\n  \"donkey\",\n  \"soccer\",\n  \"sucker\",\n  \"vacation\",\n  \"biking\",\n  \"turkey\",\n  \"cooking\",\n  \"weekend\",\n  \"uncle\",\n  \"napkin\",\n  \"bacon\",\n  \"checkers\",\n  \"jacket\",\n  \"pocket\",\n  \"pumpkin\",\n  \"raincoat\",\n  \"taco\",\n  \"looking\",\n  \"helicopter\",\n  \"apricot\",\n  \"vacuum\",\n  //Endingduck',\n  \"bike\",\n  \"lock\",\n  \"cheek\",\n  \"hawk\",\n  \"leak\",\n  \"rake\",\n  \"rock\",\n  \"shake\",\n  \"music\",\n  \"book\",\n  \"back\",\n  \"pack\",\n  \"cook\",\n  \"hike\",\n  \"sick\",\n  \"check\",\n  \"hook\",\n  \"lick\",\n  \"neck\",\n  \"snack\",\n  \"stick\",\n  \"truck\",\n  \"walk\",\n  \"pick\",\n  //Beginning\n  \"goose\",\n  \"gate\",\n  \"gas\",\n  \"gift\",\n  \"go\",\n  \"gulp\",\n  \"good\",\n  \"gone\",\n  \"guess\",\n  \"give\",\n  \"ghost\",\n  \"guitar\",\n  \"garbage\",\n  \"goodbye\",\n  \"goat\",\n  \"game\",\n  \"gum\",\n  \"girl\",\n  \"golf\",\n  \"guy\",\n  \"goal\",\n  \"gallon\",\n  \"gold\",\n  \"garage\",\n  \"gorilla\",\n  //Middle\n  \"dragon\",\n  \"luggage\",\n  \"cougar\",\n  \"tiger\",\n  \"eagle\",\n  \"merry-go-round\",\n  \"tugboat\",\n  \"pigpen\",\n  \"again\",\n  \"wagon\",\n  \"sugar\",\n  \"dugout\",\n  \"foggy\",\n  \"magnet\",\n  \"hamburger\",\n  \"jogging\",\n  \"juggle\",\n  \"pigtail\",\n  \"magazine\",\n  \"yoga\",\n  \"seagull\",\n  \"alligator\",\n  \"August\",\n  \"bigger\",\n  \"doggy\",\n  //Ending\n  \"bug\",\n  \"dog\",\n  \"leg\",\n  \"bag\",\n  \"mug\",\n  \"big\",\n  \"rag\",\n  \"pig\",\n  \"Doug\",\n  \"frog\",\n  \"fog\",\n  \"twig\",\n  \"slug\",\n  \"fig\",\n  \"dig\",\n  \"log\",\n  \"hug\",\n  \"rug\",\n  \"tag\",\n  \"wag\",\n  \"wig\",\n  \"egg\",\n  \"tug\",\n  \"flag\",\n  \"jug\",\n  //Beginning\n  \"teeth\",\n  \"tire\",\n  \"toast\",\n  \"toy\",\n  \"teacher\",\n  \"two\",\n  \"toad\",\n  \"tiger\",\n  \"turkey\",\n  \"taco\",\n  \"tool\",\n  \"tooth\",\n  \"toe\",\n  \"talk\",\n  \"towel\",\n  \"turtle\",\n  \"team\",\n  \"take\",\n  \"tall\",\n  \"taste\",\n  \"tub\",\n  \"touch\",\n  \"top\",\n  \"tongue\",\n  \"time\",\n  //Middle\n  \"button\",\n  \"guitar\",\n  \"kitten\",\n  \"mittens\",\n  \"potato\",\n  \"eighteen\",\n  \"rotten\",\n  \"hotel\",\n  \"cotton\",\n  \"motel\",\n  \"beauty\",\n  \"better\",\n  \"city\",\n  \"butter\",\n  \"little\",\n  \"butterfly\",\n  \"tomatoe\",\n  \"biting\",\n  \"Saturday\",\n  \"water\",\n  //Ending'\n  \"bat\",\n  \"boat\",\n  \"cat\",\n  \"fruit\",\n  \"goat\",\n  \"hat\",\n  \"coat\",\n  \"light\",\n  \"nut\",\n  \"chocolate\",\n  \"eat\",\n  \"bite\",\n  \"cut\",\n  \"cute\",\n  \"feet\",\n  \"get\",\n  \"sit\",\n  \"right\",\n  \"not\",\n  \"late\",\n  \"kite\",\n  \"hot\",\n  \"hat\",\n  \"wet\",\n  \"white\",\n  //Beginning\n  \"dad\",\n  \"dark\",\n  \"day\",\n  \"dime\",\n  \"do\",\n  \"done\",\n  \"dust\",\n  \"dot\",\n  \"dive\",\n  \"dance\",\n  \"desk\",\n  \"dish\",\n  \"dog\",\n  \"doll\",\n  \"duck\",\n  \"door\",\n  \"dentist\",\n  \"doctor\",\n  \"dinner\",\n  \"down\",\n  \"dig\",\n  \"dove\",\n  \"dear\",\n  \"does\",\n  \"date\",\n  //Middle\n  \"medicine\",\n  \"ladder\",\n  \"radio\",\n  \"reading\",\n  \"wedding\",\n  \"lady\",\n  \"spider\",\n  \"daddy\",\n  \"feeding\",\n  \"body\",\n  \"kindergarten\",\n  \"birthday\",\n  \"riding\",\n  \"Thursday\",\n  \"baby doll\",\n  \"calendar\",\n  \"Canada\",\n  \"idea\",\n  \"ready\",\n  \"shadow\",\n  \"Tuesday\",\n  \"louder\",\n  \"hidden\",\n  \"hiding\",\n  \"speeding\",\n  //Ending\n  \"food\",\n  \"hand\",\n  \"mud\",\n  \"bed\",\n  \"sand\",\n  \"add\",\n  \"bad\",\n  \"bread\",\n  \"did\",\n  \"dad\",\n  \"cried\",\n  \"glad\",\n  \"grade\",\n  \"good\",\n  \"hide\",\n  \"kid\",\n  \"loud\",\n  \"mad\",\n  \"read\",\n  \"wood\",\n  \"sad\",\n  \"ride\",\n  \"red\",\n  \"played\",\n  \"side\"\n];\n\nconst s = [\n  \"licks\",\n  \"looks\",\n  \"kicks\",\n  \"forks\",\n  \"rakes\",\n  \"walks\",\n  \"packs\",\n  \"snacks\",\n  \"locks\",\n  \"bakes\",\n  \"cooks\",\n  \"books\",\n  \"looks\",\n  \"shakes\",\n  \"blinks\",\n  \"fox\",\n  \"talks\",\n  \"parks\",\n  \"rocks\",\n  \"kicks\",\n  \"fix\",\n  \"locks\",\n  \"box\",\n  \"makes\",\n  \"knocks\",\n  \"hooks\",\n  \"scoop\",\n  \"scare\",\n  \"scarf\",\n  \"skirt\",\n  \"scout\",\n  \"scale\",\n  \"skinny\",\n  \"scar\",\n  \"score\",\n  \"skill\",\n  \"skip\",\n  \"skull\",\n  \"skunk\",\n  \"scab\",\n  \"skim\",\n  \"school\",\n  \"skin\",\n  \"skate\",\n  \"ski\",\n  \"sky\",\n  \"slow\",\n  \"sled\",\n  \"slacker\",\n  \"slam\",\n  \"slab\",\n  \"slave\",\n  \"sleigh\",\n  \"slick\",\n  \"slit\",\n  \"slim\",\n  \"sliver\",\n  \"sludge\",\n  \"slug\",\n  \"slant\",\n  \"slob\",\n  \"sleeve\",\n  \"sleep\",\n  \"slip\",\n  \"slide\",\n  \"slap\",\n  \"smell\",\n  \"smoke\",\n  \"smog\",\n  \"smear\",\n  \"smooch\",\n  \"smudge\",\n  \"smug\",\n  \"smock\",\n  \"smooth\",\n  \"smack\",\n  \"smite\",\n  \"smoky\",\n  \"smother\",\n  \"smuggle\",\n  \"smart\",\n  \"snack\",\n  \"snarl\",\n  \"snatch\",\n  \"snoop\",\n  \"snot\",\n  \"sneak\",\n  \"snip\",\n  \"snag\",\n  \"snob\",\n  \"snuggle\",\n  \"snooze\",\n  \"sniffle\",\n  \"snoop\",\n  \"snout\",\n  \"snorkel\",\n  \"snicker\",\n  \"snitch\",\n  \"snowball\",\n  \"snort\",\n  \"snap\",\n  \"snake\",\n  \"sneeze\",\n  \"snow\",\n  \"snore\",\n  \"spoon\",\n  \"space\",\n  \"spy\",\n  \"spare\",\n  \"sponge\",\n  \"sparkle\",\n  \"spear\",\n  \"spend\",\n  \"spin\",\n  \"spine\",\n  \"spoon\",\n  \"space\",\n  \"spinach\",\n  \"spa\",\n  \"spark\",\n  \"speed\",\n  \"Spanish\",\n  \"speech\",\n  \"spice\",\n  \"spent\",\n  \"special\",\n  \"spider\",\n  \"speak\",\n  \"spill\",\n  \"spell\",\n  \"sports\",\n  \"stamp\",\n  \"step\",\n  \"stack\",\n  \"stand\",\n  \"stay\",\n  \"steal\",\n  \"steer\",\n  \"stitch\",\n  \"still\",\n  \"steam\",\n  \"stone\",\n  \"stop\",\n  \"stem\",\n  \"state\",\n  \"stick\",\n  \"sting\",\n  \"store\",\n  \"stage\",\n  \"swallow\",\n  \"swaddle\",\n  \"swam\",\n  \"swap\",\n  \"swarm\",\n  \"swear\",\n  \"swat\",\n  \"sway\",\n  \"swell\",\n  \"swept\",\n  \"swipe\",\n  \"switch\",\n  \"sword\",\n  \"swollen\",\n  \"swamp\",\n  \"swim\",\n  \"swan\",\n  \"swing\",\n  \"sweater\"\n];\n\nexport const list = [...new Set([...kgtd, ...s])];\n","export const shuffle = <T>(array: T[]): T[] => {\n  const sequence = [...array];\n\n  let last = sequence.length,\n    pick,\n    temp;\n\n  while (last) {\n    pick = Math.floor(Math.random() * last--);\n\n    temp = sequence[pick];\n    sequence[pick] = sequence[last];\n    sequence[last] = temp;\n  }\n\n  return sequence;\n};\n","import {Lists} from './state';\n\nconst KEYS = {\n  Remaining: 'remaining',\n  Passed: 'passed',\n  Failed: 'failed',\n};\n\nexport const setLists = ({remaining, passed, failed}: Partial<Lists>) => {\n  if (remaining) {\n    localStorage.setItem(KEYS.Remaining, JSON.stringify(remaining));\n  }\n\n  if (passed) {\n    localStorage.setItem(KEYS.Passed, JSON.stringify(passed));\n  }\n\n  if (failed) {\n    localStorage.setItem(KEYS.Failed, JSON.stringify(failed));\n  }\n};\n\nconst getList = (key: string) => {\n  const stored = localStorage.getItem(key);\n\n  if (stored) {\n    try {\n      return JSON.parse(stored);\n    } catch {}\n  }\n\n  return undefined;\n};\n\nexport const getLists = (): Partial<Lists> => {\n  return {\n    remaining: getList(KEYS.Remaining),\n    passed: getList(KEYS.Passed),\n    failed: getList(KEYS.Failed),\n  };\n};\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\n\nimport {shuffle, list} from '../list';\n\nimport {State} from './types';\n\nexport const initialState: State = {\n  isRecording: false,\n  audioSource: '',\n  duration: 0,\n  subject: 'remaining',\n  remaining: [], // These lists are set on configureState\n  passed: [],\n  failed: [],\n  status: 'ready',\n};\n\nconst changeSubject = (subject: State['subject']) => {\n  return (state: State) => {\n    state.subject = subject;\n    state[subject] = shuffle(state[subject]);\n    state.status = 'ready';\n    state.audioSource = '';\n  };\n};\n\nexport const {reducer, actions} = createSlice({\n  name: 'speech',\n  initialState,\n  reducers: {\n    start: (state) => {\n      state.isRecording = true;\n      state.audioSource = '';\n      state.duration = 0;\n    },\n    stop: (state, {payload: duration}: PayloadAction<number>) => {\n      state.isRecording = false;\n      state.duration = duration;\n    },\n    pass: (state) => {\n      state.audioSource = '';\n\n      const word = state[state.subject].shift();\n\n      if (word) {\n        state.passed.push(word);\n      }\n    },\n    fail: (state) => {\n      state.audioSource = '';\n\n      const word = state[state.subject].shift();\n\n      if (word) {\n        state.failed.push(word);\n      }\n    },\n    save: (state, {payload: audioSource}: PayloadAction<string>) => {\n      state.audioSource = audioSource;\n    },\n    doFailedList: changeSubject('failed'),\n    doPassedList: changeSubject('passed'),\n    doRemainingList: changeSubject('remaining'),\n    resetLists: (state) => {\n      state.subject = 'remaining';\n      state.remaining = shuffle(list);\n      state.passed = [];\n      state.failed = [];\n      state.status = 'ready';\n      state.audioSource = '';\n    },\n    changeStatus: (state, {payload}: PayloadAction<State['status']>) => {\n      state.status = payload;\n    },\n  },\n});\n","import {configureStore} from '@reduxjs/toolkit';\nimport {useDispatch} from 'react-redux';\n\nimport {list, shuffle} from '../list';\nimport {getLists} from '../storage';\n\nimport {State} from './types';\nimport {reducer, initialState} from './duck';\n\nconst preloadState = (): Partial<State> | undefined => {\n  const {remaining, passed, failed} = getLists();\n\n  if (remaining || passed || failed) {\n    return {\n      ...initialState,\n      remaining: remaining ? shuffle(remaining) : initialState.remaining,\n      passed: passed ? shuffle(passed) : initialState.passed,\n      failed: failed ? shuffle(failed) : initialState.failed,\n    };\n  } else {\n    return {...initialState, remaining: shuffle(list)};\n  }\n};\n\nexport const store = configureStore({\n  reducer,\n  preloadedState: preloadState(),\n});\n\ntype AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n","import {State} from './types';\n\nexport const selectList = (state: State) => state[state.subject];\nexport const selectSubject = ({subject}: State) => subject;\nexport const selectRemainingList = ({remaining}: State) => remaining;\nexport const selectPassedList = ({passed}: State) => passed;\nexport const selectFailedList = ({failed}: State) => failed;\n\nexport const selectWord = (state: State) => state[state.subject][0];\nexport const selectAudioSource = ({audioSource}: State) => audioSource;\nexport const selectIsRecording = ({isRecording}: State) => isRecording;\nexport const selectDuration = ({duration}: State) => duration;\n\nexport const selectStatus = ({status}: State) => status;\nexport const selectIsReady = ({status}: State) => status === 'ready';\nexport const selectIsCompleted = ({status}: State) => status === 'completed';\nexport const selectIsSettings = ({status}: State) => status === 'settings';\n","import {createContext, FC, useContext, useEffect, useRef} from 'react';\n\nimport {actions, useAppDispatch} from './state';\n\ntype Type = {\n  start: () => void;\n  stop: () => void;\n};\n\nconst MIME_TYPE = 'audio/mpeg';\n\nconst RecorderContext = createContext<Type>({} as any);\n\nexport const useRecorder = () => {\n  return useContext(RecorderContext);\n};\n\ntype Acts = 'start' | 'stop';\n\nexport const RecorderProvider: FC<{recorder: MediaRecorder}> = ({\n  children,\n  recorder,\n}) => {\n  const dispatch = useAppDispatch();\n  const ellapsed = useRef(0);\n\n  const effects = {\n    stop: () => {\n      if (recorder.state !== 'inactive') {\n        recorder.stop();\n        dispatch(actions.stop((performance.now() - ellapsed.current) / 1000));\n      }\n    },\n    start: () => {\n      if (recorder.state !== 'recording') {\n        recorder.start();\n        ellapsed.current = performance.now();\n        dispatch(actions.start());\n      }\n    },\n  };\n\n  const recordingState = (act: Acts) => {\n    switch (act) {\n      case 'stop': {\n        effects.stop();\n      }\n    }\n  };\n\n  const pausedState = (action: Acts) => {\n    switch (action) {\n      case 'stop': {\n        effects.stop();\n      }\n    }\n  };\n\n  const inactiveState = (action: Acts) => {\n    switch (action) {\n      case 'start': {\n        effects.start();\n      }\n    }\n  };\n\n  // Wonder if I like state machines\n  const controller = (action: Acts) => {\n    switch (recorder.state) {\n      case 'recording': {\n        recordingState(action);\n        return;\n      }\n      case 'paused': {\n        pausedState(action);\n        return;\n      }\n      case 'inactive':\n      default: {\n        inactiveState(action);\n        return;\n      }\n    }\n  };\n\n  const start = () => {\n    controller('start');\n  };\n\n  const stop = () => {\n    controller('stop');\n  };\n\n  useEffect(() => {\n    recorder.ondataavailable = ({data}) => {\n      const audioSource = URL.createObjectURL(\n        new Blob([data], {type: MIME_TYPE}),\n      );\n\n      dispatch(actions.save(audioSource));\n    };\n  }, [recorder, dispatch]);\n\n  const context = {\n    start,\n    stop,\n  };\n\n  return (\n    <RecorderContext.Provider value={context}>\n      {children}\n    </RecorderContext.Provider>\n  );\n};\n","import {useRef} from 'react';\nimport {useSelector} from 'react-redux';\n\n/**\n * Could be dangerous, this doesn't update the component ever\n */\nexport const useRefSelector = <S = any, R = any>(selector: (state: S) => R) => {\n  const ref = useRef<R>(undefined as never);\n\n  useSelector((state: S) => {\n    ref.current = selector(state);\n  });\n\n  return ref;\n};\n","// Should include msMaxTouchPoints but since we're so incompatible with IE, why bother\nexport const isTouchable = 'ontouchstart' in window || navigator.maxTouchPoints;\n\n// Maybe make it a function if I need it check on runtime when devices are added, etc\n","import {MutableRefObject} from 'react';\n\nimport {SwipeAction, SwipeHandler} from './types';\n\ntype Callback = MutableRefObject<SwipeHandler>;\n\n// \"state\" lol, global variables\nconst subscribers: Callback[] = [];\n\nexport const unsubscribe = (callback: Callback) => {\n  const found = subscribers.indexOf(callback);\n  subscribers.splice(found, 1);\n};\n\n/**\n * Returns unsubscribe function\n */\nexport const subscribe = (callback: Callback) => {\n  subscribers.push(callback);\n\n  return () => unsubscribe(callback);\n};\n\nexport const withoutSubscribers = (method: () => void) => {\n  if (!subscribers.length) {\n    method();\n  }\n};\n\nexport const notifySubscribers = (direction: SwipeAction) => {\n  subscribers.forEach((subscriber) => subscriber.current(direction));\n};\n","import {throttle} from 'lodash';\n\nimport {SwipeAction} from './types';\nimport {notifySubscribers} from './state';\n\nlet lastDelta = 0;\nlet lastIncreasing = false;\n\n// TODO: See if I need to do anything for other laptops, since MacOS uses momentum\nexport const handleWheel = ({deltaY, deltaX}: WheelEvent) => {\n  const absX = Math.abs(deltaX);\n  const absY = Math.abs(deltaY);\n\n  const delta = absX >= absY ? absX : absY;\n\n  let increasing;\n  if (lastDelta < delta) {\n    increasing = true;\n  } else if (lastDelta > delta) {\n    increasing = false;\n  } else {\n    return;\n  }\n\n  // When the curve start to increase, it should be the start of a new gesture\n  if (lastIncreasing === false && increasing === true) {\n    let direction: SwipeAction;\n    if (absX >= absY) {\n      direction = deltaX >= 0 ? 'left' : 'right';\n    } else {\n      direction = deltaY >= 0 ? 'up' : 'down';\n    }\n\n    notifySubscribers(direction);\n  }\n\n  lastIncreasing = increasing;\n  lastDelta = delta;\n};\n\nexport const throttledHandleWheel = throttle(handleWheel, 333, {leading: true});\n","import {useEffect, useRef} from 'react';\n\nimport {isTouchable} from '../isTouchable';\n\nimport {SwipeHandler} from './types';\nimport {subscribe, withoutSubscribers} from './state';\n\nimport {throttledHandleWheel} from './handleWheel';\nimport {handleTouchStart, handleTouchMove, handleTouchEnd} from './handleTouch';\n\nexport const useSwipe = (handler: SwipeHandler) => {\n  const callback = useRef(handler);\n\n  useEffect(() => {\n    callback.current = handler;\n  }, [handler]);\n\n  useEffect(() => {\n    withoutSubscribers(() => {\n      document.addEventListener('wheel', throttledHandleWheel);\n\n      if (isTouchable) {\n        document.addEventListener('touchstart', handleTouchStart);\n        document.addEventListener('touchmove', handleTouchMove);\n        document.addEventListener('touchend', handleTouchEnd);\n      }\n    });\n\n    const unsubscribe = subscribe(callback);\n\n    return () => {\n      unsubscribe();\n\n      withoutSubscribers(() => {\n        document.removeEventListener('wheel', throttledHandleWheel);\n\n        if (isTouchable) {\n          document.removeEventListener('touchstart', handleTouchStart);\n          document.removeEventListener('touchmove', handleTouchMove);\n          document.removeEventListener('touchend', handleTouchEnd);\n        }\n      });\n    };\n  }, []);\n};\n","import {useCallback, useEffect} from 'react';\n\nimport {useRecorder} from '../RecorderProvider';\nimport {selectIsReady} from '../state';\nimport {useRefSelector} from '../useRefSelector';\nimport {SwipeAction, useSwipe} from '../useSwipe';\n\nexport const useRecord = () => {\n  const {start, stop} = useRecorder();\n  const canRecord = useRefSelector(selectIsReady);\n\n  const handleTouch = useCallback(\n    (action: SwipeAction) => {\n      if (canRecord.current) {\n        switch (action) {\n          case 'pressed': {\n            start();\n            return;\n          }\n          case 'released': {\n            stop();\n            return;\n          }\n        }\n      }\n    },\n    [canRecord, start, stop],\n  );\n\n  useSwipe(handleTouch);\n\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (canRecord.current && event.key === ' ') {\n        event.preventDefault(); // Scrolls\n        start();\n      }\n    };\n\n    const handleKeyUp = (event: KeyboardEvent) => {\n      if (canRecord.current && event.key === ' ') {\n        event.preventDefault(); // Scrolls\n        stop();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [canRecord, start, stop]);\n};\n","import styled from '@emotion/styled';\nimport {useSelector} from 'react-redux';\n\nimport {useSpring, animated} from 'react-spring';\n\nimport {selectWord} from '../state';\n\ntype Props = {\n  percent: number;\n};\n\nconst Container = styled.div({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'flex-end', // iOS\n  height: `120px`, // Golden ratio of 390 is 240\n  marginBottom: `7px`,\n});\n\nconst AnimatedText = styled(animated.span)({\n  backgroundClip: 'text', // Makes backgroundImage only affect text\n  WebkitTextStroke: '1px black',\n  WebkitTextFillColor: 'transparent', // Makes backgroundImage seeing through text\n\n  // Black starts first so it can move to the right =>\n  backgroundImage: `linear-gradient(to right, black 50%, white 50%)`,\n  /**\n   * Since the backgroundImage is 50% white, 50% black, when backgroundPosition is a percent\n   * the other half is cyclical and shown, by making it 200%, we stretch it so that it's\n   * 100% white, 100% black\n   */\n  backgroundSize: '200%',\n});\n\nconst toStyle = (percent: number = 100) => {\n  const position = (100 - percent).toFixed(0) + '%';\n\n  return {\n    backgroundPosition: position,\n  };\n};\n\nexport const Word = ({percent}: Props) => {\n  const word = useSelector(selectWord);\n\n  const [style, api] = useSpring(() => toStyle());\n\n  if (Number.isFinite(percent)) {\n    api.start(toStyle(percent));\n  } else {\n    api.start(toStyle());\n  }\n\n  // Trial and error with widest character in font\n  const fontSize = word.length > 7 ? `3em` : `4em`;\n\n  return (\n    <Container>\n      <AnimatedText style={{...style, fontSize}}>{word}</AnimatedText>\n    </Container>\n  );\n};\n","import {forwardRef, useCallback, useState, MutableRefObject} from 'react';\nimport {useSelector} from 'react-redux';\n\nimport {selectAudioSource, selectDuration} from '../state';\nimport {useRefSelector} from '../useRefSelector';\n\nimport {Word} from './Word';\n\nconst isRef = (ref: any): ref is MutableRefObject<HTMLAudioElement> => {\n  return !!ref.current;\n};\n\nexport const Player = forwardRef<HTMLAudioElement>((_, ref) => {\n  const audioSource = useSelector(selectAudioSource);\n\n  const [percent, setPercent] = useState(100);\n\n  const inaccurateDuration = useRefSelector(selectDuration);\n\n  const handleTimeUpdate = useCallback(() => {\n    const audio = isRef(ref) && ref.current;\n\n    // When a new source is fed, currentTime is changed to 0 and thus \"change\"\n    // To ignore this, we check for the proper ready state\n    if (audio) {\n      if (audio.readyState !== 0) {\n        const {currentTime, duration: accurateDuration} = audio;\n        // Sometimes the API is unable to return duration, so we use the one on redux\n        const duration = Number.isFinite(accurateDuration)\n          ? accurateDuration\n          : inaccurateDuration.current;\n\n        const rawPercent = (currentTime / duration) * 100;\n\n        setPercent(rawPercent);\n      } else {\n        setPercent(100);\n      }\n    }\n  }, [ref, inaccurateDuration]);\n\n  // Since we sometimes use inaccurate duration, we need to force 100% when ended\n  const handleEnded = useCallback(() => {\n    setPercent(100);\n  }, []);\n\n  /**\n   * Note on iOS interactions\n   * The autoPlay attribute works as long as the user has interacted with the site\n   * ie: the first recording doesn't work but any subsequent will work\n   * onLoadedData doesn't work \"on loaded data\" but only after the user interacts\n   * then does it load data\n   */\n  return (\n    <>\n      <audio\n        ref={ref}\n        autoPlay\n        src={audioSource}\n        onTimeUpdate={handleTimeUpdate}\n        onEnded={handleEnded}\n      />\n      <Word percent={percent} />\n    </>\n  );\n});\n","import {useEffect} from 'react';\nimport {useSelector} from 'react-redux';\n\nimport {\n  actions,\n  selectRemainingList,\n  selectPassedList,\n  selectFailedList,\n  useAppDispatch,\n  selectWord,\n  State,\n} from '../state';\nimport {setLists} from '../storage';\n\nconst CompletionListener = () => {\n  const dispatch = useAppDispatch();\n\n  const completed = useSelector((state: State) => !selectWord(state));\n\n  if (completed) {\n    dispatch(actions.changeStatus('completed'));\n  }\n\n  return <></>;\n};\n\n// So far it's only auto save but still\nexport const System = () => {\n  const remaining = useSelector(selectRemainingList);\n  const passed = useSelector(selectPassedList);\n  const failed = useSelector(selectFailedList);\n\n  useEffect(() => {\n    setLists({\n      remaining,\n      passed,\n      failed,\n    });\n  }, [remaining, passed, failed]);\n\n  return (\n    <>\n      <CompletionListener />\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport {useSelector} from 'react-redux';\nimport {useSpring, animated} from 'react-spring';\nimport {SiAudiomack} from 'react-icons/si';\n\nimport {selectIsRecording} from '../state';\n\nconst Container = styled.div({\n  position: 'absolute',\n  top: '7px',\n  right: '14px',\n});\n\nconst Icon = styled(SiAudiomack)({\n  height: '3em',\n  width: 'auto',\n});\n\nexport const REC = () => {\n  const isRecording = useSelector(selectIsRecording);\n\n  const {x} = useSpring({\n    reset: isRecording,\n    cancel: !isRecording,\n    loop: true,\n    from: {x: 0},\n    x: isRecording ? 1 : 0,\n    config: {duration: 1000},\n  });\n\n  return (\n    <Container>\n      <animated.div\n        style={{\n          transform: x\n            .to({\n              range: [0, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 1],\n              output: [1, 0.97, 0.9, 1.1, 0.9, 1.1, 1.03, 1],\n            })\n            .to((x) => `scale(${x})`),\n        }}\n      >\n        <Icon style={{color: isRecording ? 'IndianRed' : '#fdfdfd'}} />\n      </animated.div>\n    </Container>\n  );\n};\n","import {FC, Children, ReactElement, CSSProperties, RefObject} from 'react';\n\nimport styled from '@emotion/styled';\nimport {useSelector} from 'react-redux';\n\nimport {useSpring, animated} from 'react-spring';\n\nimport {\n  MdSpaceBar,\n  MdCheck,\n  MdClose,\n  MdUpdate,\n  MdList,\n  MdTouchApp,\n} from 'react-icons/md';\nimport {GiSoundWaves, GiHamburger} from 'react-icons/gi';\nimport {CgCrown} from 'react-icons/cg';\n\nimport {\n  selectAudioSource,\n  selectIsRecording,\n  selectPassedList,\n  selectFailedList,\n  useAppDispatch,\n  actions,\n  selectStatus,\n  selectRemainingList,\n  selectSubject,\n} from '../state';\nimport {SwipeAction, useSwipe} from '../useSwipe';\nimport {isTouchable} from '../isTouchable';\n\ntype Props = {\n  audioRef: RefObject<HTMLAudioElement>;\n};\n\nconst Ul = styled.ul({\n  listStyleType: 'none',\n});\n\nconst Li = styled(animated.li)({});\n\nconst Centered = styled.span({\n  verticalAlign: 'middle',\n});\n\nconst AnimatedInstruction: FC<{style: CSSProperties}> = ({\n  children,\n  ...props\n}) => {\n  const style = useSpring(props.style);\n\n  return <Li style={style}>{children}</Li>;\n};\n\nconst Instruction: FC<{style?: CSSProperties}> = ({children, style}) => {\n  // Normalize for fragments\n  const normal =\n    Children.count(children) === 1\n      ? (Children.toArray(children)[0] as ReactElement).props.children\n      : children;\n\n  const elements = Children.map(normal, (child, index) => {\n    if (index === 0) {\n      return <Centered>{child}</Centered>;\n    } else {\n      return <>{child}</>;\n    }\n  });\n\n  if (style) {\n    return <AnimatedInstruction style={style}>{elements}</AnimatedInstruction>;\n  } else {\n    return <Li>{elements}</Li>;\n  }\n};\n\nconst Subject = styled.span({\n  fontWeight: 'bold',\n});\n\nconst Divider = styled.div({\n  marginTop: '3px',\n});\n\nconst BigDivider = styled.div({\n  marginTop: '1em',\n});\n\nconst getDisableProps = (condition: any) => {\n  if (!condition) {\n    return {\n      style: {\n        color: `#f4f4f4`,\n      },\n      'aria-hidden': true,\n    };\n  } else {\n    return {\n      style: {\n        color: 'black',\n      },\n    };\n  }\n};\n\ntype HowToRecordProps = {isRecording: boolean};\nconst HowToRecord = (() => {\n  if (isTouchable) {\n    return ({isRecording}: HowToRecordProps) => {\n      return (\n        <Instruction>\n          {isRecording ? (\n            <>\n              <MdTouchApp /> let go to stop\n            </>\n          ) : (\n            <>\n              <MdTouchApp /> <Subject>long press</Subject> to record\n            </>\n          )}\n        </Instruction>\n      );\n    };\n  } else {\n    return ({isRecording}: HowToRecordProps) => {\n      return (\n        <Instruction>\n          {isRecording ? (\n            <>\n              <MdSpaceBar /> let go of <Subject>space</Subject> to stop\n            </>\n          ) : (\n            <>\n              <MdSpaceBar /> hold <Subject>space</Subject> to record\n            </>\n          )}\n        </Instruction>\n      );\n    };\n  }\n})();\n\nconst Playing = ({audioRef}: Props) => {\n  const hasAudio = !!useSelector(selectAudioSource);\n  const isRecording = useSelector(selectIsRecording);\n\n  const dispatch = useAppDispatch();\n\n  const handleSwipe = (direction: SwipeAction) => {\n    switch (direction) {\n      case 'up': {\n        const audio = audioRef.current;\n\n        if (audio) {\n          if (audio.paused) {\n            audio.play();\n            // audio.play().catch((error) => {\n            //   // TODO: A way to report error on iOS\n            //   // TODO: Better yet, start the app with an iOS challenge\n            //   console.log(error);\n            // });\n          } else {\n            audio.currentTime = 0;\n          }\n        }\n\n        return;\n      }\n      case 'left': {\n        dispatch(actions.fail());\n        return;\n      }\n      case 'right': {\n        dispatch(actions.pass());\n        return;\n      }\n    }\n  };\n\n  const tryHandleSwipe = (action: SwipeAction) => {\n    if (hasAudio) {\n      handleSwipe(action);\n    }\n  };\n\n  useSwipe(tryHandleSwipe);\n\n  const hasAudioProps = getDisableProps(hasAudio);\n\n  return (\n    <>\n      <HowToRecord isRecording={isRecording} />\n      <Divider />\n      <Instruction {...hasAudioProps}>\n        <MdCheck /> <Subject>swipe right</Subject> to pass\n      </Instruction>\n      <Instruction {...hasAudioProps}>\n        <MdClose /> <Subject>swipe left</Subject> to fail\n      </Instruction>\n      <Divider />\n      <Instruction {...hasAudioProps}>\n        <GiSoundWaves /> <Subject>swipe up</Subject> to replay recording\n      </Instruction>\n    </>\n  );\n};\n\nconst Beat = () => {\n  const passed = useSelector(selectPassedList).length;\n  const failed = useSelector(selectFailedList).length;\n\n  const dispatch = useAppDispatch();\n\n  const handleSwipe = (direction: SwipeAction) => {\n    switch (direction) {\n      case 'left': {\n        if (failed) {\n          dispatch(actions.doFailedList());\n        }\n        return;\n      }\n      case 'right': {\n        if (passed) {\n          dispatch(actions.doPassedList());\n        }\n        return;\n      }\n      case 'up': {\n        dispatch(actions.resetLists());\n        return;\n      }\n    }\n  };\n\n  useSwipe(handleSwipe);\n\n  // Ummmmm... finished shouldn't be li... you know aria something something\n  return (\n    <>\n      <Instruction>\n        <CgCrown style={{backgroundColor: 'yellow', borderRadius: '1px'}} />{' '}\n        <Subject>finished!</Subject>\n      </Instruction>\n      <BigDivider />\n      <Instruction {...getDisableProps(failed)}>\n        <MdClose /> <Subject>swipe left</Subject> to retry {failed} failed words\n      </Instruction>\n      <Divider />\n      <Instruction>\n        <MdUpdate /> <Subject>swipe up</Subject> to restart\n      </Instruction>\n      <Divider />\n      <Instruction {...getDisableProps(passed)}>\n        <MdCheck /> <Subject>swipe right</Subject> to retry {passed} passed\n        words\n      </Instruction>\n    </>\n  );\n};\n\nconst Settings = () => {\n  const passed = useSelector(selectPassedList).length;\n  const failed = useSelector(selectFailedList).length;\n  const remaining = useSelector(selectRemainingList).length;\n  const subject = useSelector(selectSubject);\n\n  const dispatch = useAppDispatch();\n\n  const canDoFailed = failed && subject !== 'failed';\n  const canDoPassed = passed && subject !== 'passed';\n\n  const hasRemaining = remaining && subject !== 'remaining';\n  const canRestart = !!(passed || failed);\n\n  const handleSwipe = (direction: SwipeAction) => {\n    switch (direction) {\n      case 'left': {\n        if (canDoFailed) {\n          dispatch(actions.doFailedList());\n        }\n        return;\n      }\n      case 'right': {\n        if (canDoPassed) {\n          dispatch(actions.doPassedList());\n        }\n        return;\n      }\n      case 'up': {\n        if (canRestart) {\n          dispatch(actions.resetLists());\n        }\n        return;\n      }\n      case 'down': {\n        if (hasRemaining) {\n          dispatch(actions.doRemainingList());\n        }\n        return;\n      }\n    }\n  };\n\n  useSwipe(handleSwipe);\n\n  return (\n    <>\n      <Instruction>\n        <GiHamburger style={{color: '#EE851C', borderRadius: '1px'}} />{' '}\n        <Subject>settings</Subject>\n      </Instruction>\n      <BigDivider />\n      <Instruction {...getDisableProps(canDoFailed)}>\n        <MdClose /> <Subject>swipe left</Subject> to retry {failed} failed words\n      </Instruction>\n      <Divider />\n      <Instruction {...getDisableProps(canRestart)}>\n        <MdUpdate /> <Subject>swipe up</Subject> to restart\n      </Instruction>\n      <Divider />\n      <Instruction {...getDisableProps(canDoPassed)}>\n        <MdCheck /> <Subject>swipe right</Subject> to retry {passed} passed\n        words\n      </Instruction>\n      <Divider />\n      <Instruction {...getDisableProps(hasRemaining)}>\n        <MdList /> <Subject>swipe down</Subject> to return to main list,{' '}\n        {remaining} words\n      </Instruction>\n    </>\n  );\n};\n\n// TODO: Rethink the word \"instructions\", it contains the instruction view but also the logic on whether\n// an instruction and its corresponding gesture is available\nexport const Instructions = (props: Props) => {\n  const status = useSelector(selectStatus);\n\n  let element;\n  switch (status) {\n    case 'ready':\n      element = <Playing {...props} />;\n      break;\n    case 'completed':\n      element = <Beat />;\n      break;\n    case 'settings':\n      element = <Settings />;\n      break;\n  }\n\n  return <Ul aria-label=\"app controls\">{element}</Ul>;\n};\n","import styled, {CSSObject} from '@emotion/styled';\nimport {useSelector} from 'react-redux';\nimport {selectFailedList, selectPassedList, selectSubject} from '../state';\n\nconst Container = styled.div({\n  display: 'flex',\n  justifyContent: 'center',\n});\n\nconst sharedStyle: CSSObject = {\n  display: 'flex',\n  fontWeight: 'bold',\n  width: `50%`,\n};\n\nconst Left = styled.span(sharedStyle, {\n  justifyContent: 'flex-end', // Mobile Chrome didn't like `end`\n  color: 'red',\n});\n\nconst Right = styled.span(sharedStyle, {\n  display: 'flex',\n  color: 'green',\n});\n\nconst Divider = styled.span({\n  margin: '0 5px',\n  backgroundColor: 'gray',\n  width: '2px',\n});\n\nexport const Score = () => {\n  const passedList = useSelector(selectPassedList);\n  const failedList = useSelector(selectFailedList);\n\n  const subject = useSelector(selectSubject);\n  const underline = {textDecoration: 'underline'};\n  const failedUnderlined = subject === 'failed' ? underline : undefined;\n  const passedUnderlined = subject === 'passed' ? underline : undefined;\n\n  return (\n    <Container>\n      <Left aria-label=\"fail count\" style={failedUnderlined}>\n        {failedList.length}\n      </Left>\n      <Divider />\n      <Right aria-label=\"pass count\" style={passedUnderlined}>\n        {passedList.length}\n      </Right>\n    </Container>\n  );\n};\n","import {useEffect, useRef} from 'react';\n\nimport styled from '@emotion/styled';\nimport {useSelector} from 'react-redux';\nimport {useSpring, animated} from 'react-spring';\n\nimport IconButton from '@mui/material/IconButton';\nimport {GiHamburger} from 'react-icons/gi';\nimport {MdClose} from 'react-icons/md';\n\nimport {actions, selectStatus, useAppDispatch} from '../state';\n\nconst Container = styled.div({\n  position: 'absolute',\n  top: '3px',\n  left: '3px',\n});\n\nconst Hamburger = animated(GiHamburger);\nconst Close = animated(MdClose);\n\nconst getDisplay = (flipped: boolean): 'none' | 'inline-flex' => {\n  return flipped ? 'none' : 'inline-flex';\n};\n\nexport const Settings = () => {\n  const dispatch = useAppDispatch();\n  const status = useSelector(selectStatus);\n  const show = status === 'settings';\n\n  const previousStatus = useRef(status);\n  useEffect(() => {\n    if (status !== 'settings') {\n      previousStatus.current = status;\n    }\n  }, [status]);\n\n  const {transform, display, opacity} = useSpring({\n    display: getDisplay(show),\n    opacity: show ? 0 : 1,\n    transform: `perspective(600px) rotateX(${show ? 180 : 0}deg)`,\n    config: {mass: 5, tension: 500, friction: 80},\n  });\n\n  const toggle = () => {\n    dispatch(actions.changeStatus(show ? previousStatus.current : 'settings'));\n  };\n\n  // Announce aria settings somehow on instructions or something\n  return (\n    <Container>\n      <IconButton onClick={toggle}>\n        <Hamburger\n          style={{\n            opacity,\n            display,\n            transform,\n          }}\n        />\n        <Close\n          style={{\n            display: display.to(() => {\n              return getDisplay(!show);\n            }),\n            opacity: opacity.to((o: number) => 1 - o),\n            transform,\n          }}\n        />\n      </IconButton>\n    </Container>\n  );\n};\n","import {createRef} from 'react';\nimport styled from '@emotion/styled';\n\nimport {useRecord} from './useRecord';\nimport {useBrowserOverrides} from './useBrowserOverrides';\n\nimport {Player} from './Player';\nimport {System} from './System';\nimport {REC} from './REC';\nimport {Instructions} from './Instructions';\nimport {Score} from './Score';\nimport {Settings} from './Settings';\n\nconst Container = styled.div({\n  display: 'flex',\n  flexDirection: 'column',\n  position: 'relative',\n});\n\nexport const App = () => {\n  useBrowserOverrides();\n  useRecord();\n\n  // TODO: I would like better separation between Player and Instructions\n  const audioRef = createRef<HTMLAudioElement>();\n\n  return (\n    <>\n      <Container>\n        <Settings />\n        <REC />\n        <Player ref={audioRef} />\n        <Score />\n        <Instructions audioRef={audioRef} />\n      </Container>\n      <System />\n    </>\n  );\n};\n","import {useEffect} from 'react';\nimport {isTouchable} from '../isTouchable';\n\nexport const useBrowserOverrides = () => {\n  // Suppresses browser stuff\n  useEffect(() => {\n    // We don't do this on the main one so they can go back/forwards\n    document.body.style.overscrollBehavior = 'none';\n    document.body.style.overflow = 'hidden'; // iOS bouncy scroll, but it also messes refresh\n\n    if (isTouchable) {\n      document.body.style.webkitUserSelect = 'none';\n    }\n  }, []);\n};\n","import {FC, useEffect, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {useAppDispatch} from './state';\n\nimport {RecorderProvider} from './RecorderProvider';\nimport {App} from './App';\n\nconst Container = styled.div({\n  margin: `0 auto`,\n  backgroundColor: 'white', // TODO: Maybe think about night mode\n  width: `390px`, // my phone\n  height: `100vh`,\n});\n\nconst ErrorMessage = styled.div({\n  margin: `1em`,\n});\n\nconst Emoji: FC = ({children, ...props}) => (\n  <span {...props} role=\"img\">\n    {children}\n  </span>\n);\n\nconst MediaLoader = () => {\n  const dispatch = useAppDispatch();\n\n  const [recorder, setRecorder] = useState<MediaRecorder | undefined>();\n\n  const [status, setStatus] = useState<\n    'loading' | 'ready' | 'unsupported' | 'declined'\n  >('loading');\n\n  useEffect(() => {\n    try {\n      navigator.mediaDevices\n        .getUserMedia({audio: true})\n        .then((stream) => {\n          // Don't use `mimeType` iOS Chrome doesn't like it\n          const recorder = new MediaRecorder(stream);\n\n          setRecorder(recorder);\n          setStatus('ready');\n        })\n        .catch((error) => {\n          console.error(error);\n          setStatus('declined');\n        });\n    } catch {\n      setStatus('unsupported');\n    }\n  }, [dispatch]);\n\n  switch (status) {\n    case 'loading':\n      return <></>;\n    case 'ready':\n      return (\n        <RecorderProvider recorder={recorder!}>\n          <App />\n        </RecorderProvider>\n      );\n    case 'declined':\n      return (\n        <ErrorMessage>\n          Oi <Emoji aria-hidden={true}>🤌</Emoji> why would you be here and not\n          allow mic\n        </ErrorMessage>\n      );\n    case 'unsupported':\n    default:\n      return (\n        <ErrorMessage>\n          {/* eslint-disable jsx-a11y/accessible-emoji */}\n          <Emoji aria-label=\"shrugs\">🤷</Emoji> are you on Chrome? Cuz it only\n          works on Chrome, sorta...\n        </ErrorMessage>\n      );\n  }\n};\n\nexport const Loader = () => {\n  return (\n    <Container>\n      <MediaLoader />\n    </Container>\n  );\n};\n","import {render} from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport {store} from './state';\nimport {Loader} from './Loader';\n\nconst rootElement = document.getElementById('root');\n\nrender(\n  <Provider store={store}>\n    <Loader />\n  </Provider>,\n  rootElement,\n);\n"],"sourceRoot":""}